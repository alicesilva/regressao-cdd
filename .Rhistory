library(openintro)
install.packages("openintro")
library(openintro)
library(tidyverse)
library(ggbeeswarm)
library(modelr)
library(broom)
theme_set(theme_bw())
library(openintro)
library(tidyverse)
library(ggbeeswarm)
library(modelr)
library(broom)
theme_set(theme_bw())
data(countyComplete)
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .5)
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0, intercept = 0, color  = "red")
modelo = function(hs_grad, slope, intercept){
return(slope * hs_grad + intercept)
}
nossas_estimativas = countyComplete %>%
select(hs_grad, poverty) %>%
mutate(
segundo_modelo = modelo(hs_grad, 0, 50),
residuo = poverty - segundo_modelo,
residuo_quad = residuo**2 # para que fique tudo positivo
)
fit_modelo = nossas_estimativas %>% summarise(sse = sum(residuo_quad)) %>% pull(sse)
ggplot(countyComplete, aes(x = "", y = poverty)) +
geom_quasirandom(size = .5, width = .2) +
geom_point(aes(y = mean(poverty)), color = "red", size = 3)
usando_media = countyComplete %>%
select(hs_grad, poverty) %>%
mutate(
segundo_modelo = mean(poverty),
residuo = poverty - segundo_modelo,
residuo_quad = residuo**2
)
fit_media = usando_media %>% summarise(sse = sum(residuo_quad)) %>% pull(sse)
(fit_media - fit_modelo)/fit_media
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "lm", se = FALSE)
mod <- lm(poverty ~ hs_grad,
data = countyComplete)
# sintaxe base R:
summary(mod)
confint(mod)
# broom, que acho mais recomendável:
tidy(mod)
glance(mod) # depois falaremos desse
countyComplete %>%
add_predictions(model = mod) %>% # add o que o modelo estima p cada hs_grad
ggplot(mapping = aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .1) +
geom_line(aes(y = pred), colour = "red")  +
geom_abline(intercept = 75, slope = -.72, color  = "darkblue")
countyComplete %>%
add_residuals(model = mod) %>%
ggplot(aes(hs_grad, resid)) +
geom_point(alpha = .4, size = .5) +
geom_hline(yintercept = 0, colour = "blue")
# variância de y
var.y2 <- sum((countyComplete$poverty - mean(countyComplete$poverty))^2)
# variância dos resíduos do modelo
var.residuals <- sum(mod$residuals^2)
#calculando e conferindo o R^2
(var.y2 - var.residuals)/var.y2
rsquare(mod, data = countyComplete)
glance(mod)
rmse(mod, countyComplete)
mae(mod, countyComplete)
qae(mod, countyComplete)
library(purrr)
boot <- modelr::bootstrap(mtcars, 100)
models <- map(boot$strap, ~ lm(mpg ~ wt, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied %>%
ggplot(aes(x = estimate)) +
geom_histogram(bins = 30) +
facet_grid(. ~ term, scale = "free")
library(boot)
library(ISLR) # dados
install.packages("ISLR")
library(boot)
library(ISLR) # dados
attach(Auto)
boot.fn <- function(data, index) {
return(coef(lm(mpg ~ horsepower, data=Auto, subset = index)))
}
boot.fn(Auto, 1:392)
regressao.b = boot(Auto, boot.fn, 1000)
# tidy(regressao.b, conf.int = TRUE, conf.method = "perc") tidy(boot.out) parece bugado em 2017-06-13
plot(regressao.b, index=1) # intercept
plot(regressao.b, index=2) # horsepower
boot.ci(regressao.b, type = "bca", index = 1)
boot.ci(regressao.b, type = "bca", index = 2)
library("simpleboot")
install.packages("simpleboot")
library("simpleboot")
modelo.simples = lm(mpg ~ horsepower, data = Auto)
modelo.boot = lm.boot(modelo.simples, R = 1000)
summary(modelo.boot)
perc(modelo.boot, c(.025, .975))
library(openintro)
library(tidyverse)
library(ggbeeswarm)
library(modelr)
library(broom)
theme_set(theme_bw())
data(countyComplete)
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .5)
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0, intercept = 0, color  = "red")
modelo = function(hs_grad, slope, intercept){
return(slope * hs_grad + intercept)
}
nossas_estimativas = countyComplete %>%
select(hs_grad, poverty) %>%
mutate(
segundo_modelo = modelo(hs_grad, 0, 50),
residuo = poverty - segundo_modelo,
residuo_quad = residuo**2 # para que fique tudo positivo
)
fit_modelo = nossas_estimativas %>% summarise(sse = sum(residuo_quad)) %>% pull(sse)
ggplot(countyComplete, aes(x = "", y = poverty)) +
geom_quasirandom(size = .5, width = .2) +
geom_point(aes(y = mean(poverty)), color = "red", size = 3)
usando_media = countyComplete %>%
select(hs_grad, poverty) %>%
mutate(
segundo_modelo = mean(poverty),
residuo = poverty - segundo_modelo,
residuo_quad = residuo**2
)
fit_media = usando_media %>% summarise(sse = sum(residuo_quad)) %>% pull(sse)
(fit_media - fit_modelo)/fit_media
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4) +
geom_smooth(method = "lm", se = FALSE)
mod <- lm(poverty ~ hs_grad,
data = countyComplete)
# sintaxe base R:
summary(mod)
confint(mod)
# broom, que acho mais recomendável:
tidy(mod)
glance(mod) # depois falaremos desse
countyComplete %>%
add_predictions(model = mod) %>% # add o que o modelo estima p cada hs_grad
ggplot(mapping = aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .1) +
geom_line(aes(y = pred), colour = "red")  +
geom_abline(intercept = 75, slope = -.72, color  = "darkblue")
countyComplete %>%
add_residuals(model = mod) %>%
ggplot(aes(hs_grad, resid)) +
geom_point(alpha = .4, size = .5) +
geom_hline(yintercept = 0, colour = "blue")
# variância de y
var.y2 <- sum((countyComplete$poverty - mean(countyComplete$poverty))^2)
# variância dos resíduos do modelo
var.residuals <- sum(mod$residuals^2)
#calculando e conferindo o R^2
(var.y2 - var.residuals)/var.y2
rsquare(mod, data = countyComplete)
glance(mod)
rmse(mod, countyComplete)
mae(mod, countyComplete)
qae(mod, countyComplete)
library(purrr)
boot <- modelr::bootstrap(mtcars, 100)
models <- map(boot$strap, ~ lm(mpg ~ wt, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied %>%
ggplot(aes(x = estimate)) +
geom_histogram(bins = 30) +
facet_grid(. ~ term, scale = "free")
library(boot)
library(ISLR) # dados
attach(Auto)
boot.fn <- function(data, index) {
return(coef(lm(mpg ~ horsepower, data=Auto, subset = index)))
}
boot.fn(Auto, 1:392)
regressao.b = boot(Auto, boot.fn, 1000)
# tidy(regressao.b, conf.int = TRUE, conf.method = "perc") tidy(boot.out) parece bugado em 2017-06-13
plot(regressao.b, index=1) # intercept
plot(regressao.b, index=2) # horsepower
boot.ci(regressao.b, type = "bca", index = 1)
boot.ci(regressao.b, type = "bca", index = 2)
library("simpleboot")
modelo.simples = lm(mpg ~ horsepower, data = Auto)
modelo.boot = lm.boot(modelo.simples, R = 1000)
summary(modelo.boot)
perc(modelo.boot, c(.025, .975))
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.5, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.2, intercept = 0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 1, intercept = 0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 1, intercept = *0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 1, intercept = -0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.5, intercept = -0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = -0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.1, intercept = 0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.1, intercept = 0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.1, intercept = -0.2, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.1, intercept = -0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 1, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -1, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.8, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.2, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.4, intercept = 0.5, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.4, intercept = 0.4, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.4, intercept = 0.4, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = 0.4, intercept = 0.4, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.4, intercept = 0.4, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.1, intercept = 0.4, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.1, intercept = 80, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 80, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 50, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 60, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.5, intercept = 56, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.6, intercept = 65, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.6, intercept = 70, color  = "red")
ggplot(countyComplete, aes(x = hs_grad, y = poverty)) +
geom_point(alpha = 0.4, size = .8) +
geom_abline(slope = -0.6, intercept = 65, color  = "red")
